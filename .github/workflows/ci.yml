name: CI

on:
  push:
    branches:
      - master

env:
  CI: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - uses: actions/checkout@v1
    - uses: rwjblue/setup-volta@v1

    - name: Get Yarn cache path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-

    - name: Install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
    - name: ESLint
      run: yarn lint:js
    - name: Templates
      run: yarn lint:hbs

  publish:
    name: Publish Github Pages
    runs-on: ubuntu-latest
    needs: [tests_ember_compat]
    if: "!contains(github.event.head_commit.message, 'skip ci') &&  github.ref == 'refs/heads/master'"
    steps:
      - uses: actions/checkout@v1
      - uses: rwjblue/setup-volta@v1
      - name: Build
        run: |
          yarn
          yarn ember build --environment=production
          cp dist/index.html dist/404.html
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn semantic-release

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:

    - uses: actions/checkout@v1
    - uses: rwjblue/setup-volta@v1

    - name: Get Yarn cache path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-

    - name: Install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: run coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{secrets.COVERALLS_REPO_TOKEN}}
      run: |
        yarn test:ember
        yarn coveralls

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  tests_ember_compat:
    name: Ember Compatability
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"

    steps:
    - uses: actions/checkout@v1
    - uses: rwjblue/setup-volta@v1

    - name: Get Yarn cache path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn cache and node_modules
      id: cache-dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
        key: ${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.NODE_VERSION }}-

    - name: Install
      run: yarn install --frozen-lockfile
      if: steps.cache-dependencies.outputs.cache-hit != 'true'

    - name: Test ember compatibility
      run: yarn test:ember-compatibility 
